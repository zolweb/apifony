services:

    ### Controllers ###

{% for controller in services.controllers %}
    {{ controller.namespace }}\{{ controller.className }}:
        class: {{ controller.namespace }}\{{ controller.className }}
        arguments:
            $serializer: '@{{ services.serviceNamespace }}.serializer_interface'
            $validator: '@validator'
        public: true
    {%~ if not loop.last %}

    {%~ endif %}
{% endfor %}

    ### Format validators ###

{% for formatValidator in services.formatValidators %}
    {{ formatValidator.namespace }}\{{ formatValidator.className }}:
        class: {{ formatValidator.namespace }}\{{ formatValidator.className }}
        public: true
        tags: ['validator.constraint_validator']
    {%~ if not loop.last %}

    {%~ endif %}
{% endfor %}

    ### Serializer ###

    {{ services.serviceNamespace }}.json_encoder:
        class: 'Symfony\Component\Serializer\Encoder\JsonEncoder'

    {{ services.serviceNamespace }}.php_stan_extractor:
        class: 'Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor'

    {{ services.serviceNamespace }}.reflection_extractor:
        class: 'Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor'

    {{ services.serviceNamespace }}.property_info_extractor:
        class: 'Symfony\Component\PropertyInfo\PropertyInfoExtractor'
        arguments:
            $typeExtractors:
                - '@{{ services.serviceNamespace }}.php_stan_extractor'
                - '@{{ services.serviceNamespace }}.reflection_extractor'

    {{ services.serviceNamespace }}.attribute_loader:
        class: 'Symfony\Component\Serializer\Mapping\Loader\AttributeLoader'

    {{ services.serviceNamespace }}.class_metadata_factory:
        class: 'Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory'
        arguments:
            $loader: '@{{ services.serviceNamespace }}.attribute_loader'

    {{ services.serviceNamespace }}.metadata_aware_name_converter:
        class: 'Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter'
        arguments:
            $metadataFactory: '@{{ services.serviceNamespace }}.class_metadata_factory'

    {{ services.serviceNamespace }}.object_normalizer:
        class: 'Symfony\Component\Serializer\Normalizer\ObjectNormalizer'
        arguments:
            $propertyTypeExtractor: '@{{ services.serviceNamespace }}.property_info_extractor'
            $classMetadataFactory: '@{{ services.serviceNamespace }}.class_metadata_factory'
            $nameConverter: '@{{ services.serviceNamespace }}.metadata_aware_name_converter'

    {{ services.serviceNamespace }}.array_denormalizer:
        class: 'Symfony\Component\Serializer\Normalizer\ArrayDenormalizer'

    {{ services.serviceNamespace }}.serializer_interface:
        class: 'Symfony\Component\Serializer\Serializer'
        arguments:
            $encoders:
                - '@{{ services.serviceNamespace }}.json_encoder'
            $normalizers:
                - '@{{ services.serviceNamespace }}.object_normalizer'
                - '@{{ services.serviceNamespace }}.array_denormalizer'