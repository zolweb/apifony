<?php

namespace Zol\Ogen\Tests\TestOpenApiServer\Api\MediaTree;

use Zol\Ogen\Tests\TestOpenApiServer\Model\MediaTree;
use Zol\Ogen\Tests\TestOpenApiServer\Model\MediaFolder;
interface MediaTreeHandler
{
    public function getMediaTreeFromEmptyPayloadToApplicationJsonContent(string $qPath): GetMediaTree200ApplicationJsonResponse.php;
    public function moveToMediaFolderFromMoveToMediaFolderApplicationJsonRequestBodyPayloadPayloadToApplicationJsonContent(MoveToMediaFolderApplicationJsonRequestBodyPayload $requestBodyPayload): MoveToMediaFolder200EmptyResponse.php|MoveToMediaFolder400ApplicationJsonResponse.php|MoveToMediaFolder404ApplicationJsonResponse.php|MoveToMediaFolder409ApplicationJsonResponse.php;
    public function addMediaFolderFromAddMediaFolderApplicationJsonRequestBodyPayloadPayloadToApplicationJsonContent(AddMediaFolderApplicationJsonRequestBodyPayload $requestBodyPayload): AddMediaFolder201EmptyResponse.php|AddMediaFolder400ApplicationJsonResponse.php|AddMediaFolder404ApplicationJsonResponse.php|AddMediaFolder409ApplicationJsonResponse.php;
    public function getMediaFolderFromEmptyPayloadToApplicationJsonContent(string $pMediaFolderId): GetMediaFolder200ApplicationJsonResponse.php|GetMediaFolder404ApplicationJsonResponse.php;
    public function updateMediaFolderFromUpdateMediaFolderApplicationJsonRequestBodyPayloadPayloadToApplicationJsonContent(string $pMediaFolderId, UpdateMediaFolderApplicationJsonRequestBodyPayload $requestBodyPayload): UpdateMediaFolder200EmptyResponse.php|UpdateMediaFolder400ApplicationJsonResponse.php|UpdateMediaFolder404ApplicationJsonResponse.php|UpdateMediaFolder409ApplicationJsonResponse.php;
    public function deleteMediaFolderFromDeleteMediaFolderApplicationJsonRequestBodyPayloadPayloadToApplicationJsonContent(string $pMediaFolderId, DeleteMediaFolderApplicationJsonRequestBodyPayload $requestBodyPayload): DeleteMediaFolder200EmptyResponse.php|DeleteMediaFolder404ApplicationJsonResponse.php|DeleteMediaFolder409ApplicationJsonResponse.php;
}