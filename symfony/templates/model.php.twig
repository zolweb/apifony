{% autoescape false %}
<?php

namespace {{ model.namespace }}\Schema;

use Symfony\Component\Validator\Constraints as Assert;
use {{ model.namespace }}\Format as AssertFormat;

class {{ model.className }}
{
{%~ if model.arrayAttributes %}
    /**
    {%~ for attribute in model.arrayAttributes %}
     * @param {{ attribute.nullable ? '?' : ''}}{{ attribute.phpStanType }} ${{ attribute.variableName }}
    {%~ endfor %}
     */
{%~ endif %}
    public function __construct(
{%~ for attribute in model.attributes %}
    {%~ for constraint in attribute.constraints %}
        {{~ constraint.annotation(2) }}
    {%~ endfor %}
        public readonly {{ attribute.nullable ? '?' : '' }}{{ attribute.phpType }} ${{ attribute.variableName }}{{ attribute.hasDefault ? ' = ' ~ attribute.default : '' }},
    {%~ if not loop.last %}

    {%~ endif %}
{%~ endfor %}
    ) {
    }
}
{% endautoescape %}